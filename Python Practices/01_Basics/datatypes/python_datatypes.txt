Python Datatypes
================

What is a Datatype?
-------------------
In Python, a datatype defines what kind of value a variable holds.

Python is a dynamically typed language, meaning you don’t need to explicitly declare the datatype — it is decided automatically based on the assigned value.


Built-in Datatypes in Python
----------------------------

1. Primitive Datatype
   - int      → 10, -5, 1000
   - float    → 3.14, -0.5
   - complex  → 2+3j
   - bool     → True, False
   - NoneType → None
   - bytes    → b"hello"
   - bytearray → bytearray([65, 66, 67])
   - memoryview→ memoryview(b"hello")

2. Non-Primitive Datatype
   - str      → "Hello", 'Python'
   - list     → [1, 2, 3]
   - tuple    → (1, 2, 3)
   - set      → {1, 2, 3}
   - dict     → {"name": "Faruk", "age": 20}

1. Numbers
   - int  → integers (e.g., 10, -5, 1000)
   - float → decimal numbers (e.g., 3.14, -0.5)
   - complex → complex numbers (e.g., 2+3j)

2. Text
   - str → string (text), e.g., "Hello", 'Python'

3. Boolean
   - bool → True or False

4. Sequence Types
   - list → mutable list (e.g., [1, 2, 3])
   - tuple → immutable list (e.g., (1, 2, 3))
   - range → sequence of numbers (e.g., range(5) → 0 to 4)

5. Set Types
   - set → unordered collection of unique values (e.g., {1, 2, 3})
   - frozenset → immutable set

6. Mapping
   - dict → key-value pairs (e.g., {"name": "Faruk", "age": 20})

7. Binary Types
   - bytes → immutable binary data
   - bytearray → mutable binary data
   - memoryview → memory view object


Example Code
------------
a = 10          # int
b = 3.14        # float
c = "Python"    # str
d = True        # bool
e = [1, 2, 3]   # list
f = (1, 2, 3)   # tuple
g = {"x", "y"}  # set
h = {"name": "Faruk", "age": 20}  # dict

print(type(a))  # <class 'int'>
print(type(c))  # <class 'str'>
print(type(h))  # <class 'dict'>
